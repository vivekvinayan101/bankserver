Server creation
---------------

1.Create package.json file - npm init

2.Install Express framework - npm i express


Server side technology - node - resolve multiple requests at a time

API - HTTP request

Request structure
-----------------
header - secret data
body   - normal data, json/xml type


HTTP request types
------------------
GET     - Read
POST    - Create
DELETE  - Remove
PUT     - Complete updation 
PATCH   - Partial updation


Server respnose status code
---------------------------
100 - information
200 - success
300 - redirection
400 - client side error
500 - Server side error



Server Creation Steps
---------------------
1-import express
2-create app using express
3-set port number : 3000
4-resolve http requests


Nodemon
-------
if we run server using node, recompilation won't work. so we use another server. 

npm i -g nodemon



express.json - convert all req data from json to js

.json(data) - js to json and send as response

.status(statusCode) - change the response status code as statusCode



TOKEN in server
---------------

JWT TOKEN - json web TOKEN.

install: npm i jsonwebtoken.

library: jsonwebtoken.

sign(): method used to generate jwt token.

verify(): used to verify json web token



Token Verification
------------------

token Verification can be done using middlewares.

middlewares have the capacity to control server requests.

middleware is a function with 3 arguments - request,response,next.

there are two types of middlewares:

    1.Application specific middleware
        - works before all requests

    2.Router specific middleware
        - can apply to specific requests in server



